<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/8/2019 8:28:52 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-IJ978D0"
  DTS:CreatorName="DESKTOP-IJ978D0\Michael"
  DTS:DTSID="{0E5A8397-C979-4E11-A022-758A57BCE4B4}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1100.123"
  DTS:LocaleID="1030"
  DTS:ObjectName="Product_Dim"
  DTS:PackageType="5"
  DTS:VersionBuild="32"
  DTS:VersionGUID="{8378037D-FF41-4941-AAB1-CA67FD516DDE}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[MS Access Database]"
      DTS:CreationName="ODBC"
      DTS:DTSID="{A67CB882-6C77-4434-B1E4-22B294E46037}"
      DTS:ObjectName="MS Access Database">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Dsn=MS Access Database;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ProductCategories_CM]"
      DTS:CreationName="CACHE"
      DTS:DTSID="{12787DFE-0BC7-4F4E-944F-A2067ECFB6BB}"
      DTS:ObjectName="ProductCategories_CM">
      <DTS:ObjectData>
        <DTS:ConnectionManager>
          <DTS:CacheColumns>
            <DTS:CacheColumn
              DTS:DataType="3"
              DTS:IndexPosition="1"
              DTS:ObjectName="DC_id"
              DTS:DTSID="{873DE919-84DF-46D8-94A4-4803BC6AB568}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="50"
              DTS:ObjectName="DC_main"
              DTS:DTSID="{56186B7A-6D90-4527-BE20-360E4A0CFFAE}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="50"
              DTS:ObjectName="DC_sub"
              DTS:DTSID="{4BFCE91C-23AC-407E-8ADE-5D6AD55F361D}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="50"
              DTS:ObjectName="DC_sub-sub"
              DTS:DTSID="{606FA0F8-4507-4877-A385-FC37175FFF7C}"
              DTS:CreationName="" />
          </DTS:CacheColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Extract Data From Microsoft Access DB"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{4558E49B-AED0-4ABA-9B70-48F704095EF7}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="1033"
      DTS:ObjectName="Extract Data From Microsoft Access DB">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Extract Data From Microsoft Access DB\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Extract Data From Microsoft Access DB\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Data Conversion.Inputs[Data Conversion Input].Columns[name]"
                      cachedDataType="nText"
                      cachedName="name"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[name]" />
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Data Conversion.Inputs[Data Conversion Input].Columns[price]"
                      cachedDataType="i4"
                      cachedName="price"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[price]" />
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Data Conversion.Inputs[Data Conversion Input].Columns[deactivate_date]"
                      cachedDataType="date"
                      cachedName="deactivate_date"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[deactivate_date]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Extract Data From Microsoft Access DB\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Output].Columns[DC_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Output].Columns[DC_name]"
                      name="DC_name"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[name]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Output].Columns[DC_price]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Output].Columns[DC_price]"
                      name="DC_price"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[price]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Output].Columns[DC_deactivate_date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Output].Columns[DC_deactivate_date]"
                      name="DC_deactivate_date"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[deactivate_date]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Extract Data From Microsoft Access DB\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract Data From Microsoft Access DB\Data Conversion Script"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Data Conversion Script"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        if (Row.active == 1)
        {
            Row.DCactive = "Active";
        }
        else
        {
            Row.DCactive = "Inactive";
        }

        Row.DC2price = Row.DCprice / 100;

        if (Row.DCdeactivatedate_IsNull)
        {
            Row.DC2deactivatedate = DateTime.MaxValue;
        }
        else
        {
            Row.DC2deactivatedate = Row.DCdeactivatedate;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int16 active
    {
        get
        {
            return Buffer.GetInt16(BufferColumnIndexes[0]);
        }
    }
    public bool active_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public DateTime DCdeactivatedate
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[1]);
        }
    }
    public bool DCdeactivatedate_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Decimal DCprice
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[2]);
        }
    }
    public bool DCprice_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String DCactive
    {
        set
        {
            this[3] = value;
        }
    }
    public bool DCactive_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime DC2deactivatedate
    {
        set
        {
            this[4] = value;
        }
    }
    public bool DC2deactivatedate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal DC2price
    {
        set
        {
            this[5] = value;
        }
    }
    public bool DC2price_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ea0fbfc9bdda4aeab50c66c2dfb900e9.Properties.Settings.get_Default():SC_ea0fbfc9bdda4aeab50c66c2dfb900e9.Properties.Sett" +
    "ings")]

namespace SC_ea0fbfc9bdda4aeab50c66c2dfb900e9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_ea0fbfc9bdda4aeab50c66c2dfb900e9.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1ece17ef-7f9e-43c8-af35-80c62a3d8acb}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_ea0fbfc9bdda4aeab50c66c2dfb900e9</RootNamespace>
    <AssemblyName>SC_ea0fbfc9bdda4aeab50c66c2dfb900e9</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_ea0fbfc9bdda4aeab50c66c2dfb900e9" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_ea0fbfc9bdda4aeab50c66c2dfb900e9</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_ea0fbfc9bdda4aeab50c66c2dfb900e9</msb:DisplayName>
    <msb:ProjectId>{D2BE23B8-2B7C-4DAD-8D84-0B2469296445}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_ea0fbfc9bdda4aeab50c66c2dfb900e9.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_ea0fbfc9bdda4aeab50c66c2dfb900e9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_ea0fbfc9bdda4aeab50c66c2dfb900e9")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ea0fbfc9bdda4aeab50c66c2dfb900e9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ea0fbfc9bdda4aeab50c66c2dfb900e9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ea0fbfc9bdda4aeab50c66c2dfb900e9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_ea0fbfc9bdda4aeab50c66c2dfb900e9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_ea0fbfc9bdda4aeab50c66c2dfb900e9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_ea0fbfc9bdda4aeab50c66c2dfb900e9.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMjoa1wAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAtjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGQ0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAvBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACY
NAAAAAAAAEgAAAACAAUAiCIAACQRAAABAAAAAAAAAKwzAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMAWgAAAAAAAAADbwYAAAYX
Mw0DcgEAAHBvDAAABisLA3IPAABwbwwAAAYDA28KAAAGH2RzEgAACigTAAAKbxAAAAYDbwkAAAYs
DAN+FAAACm8OAAAGKgMDbwgAAAZvDgAABioeAigUAAAGKioCAwQFKBUAAAoqUgJ7FgAACgJ7FwAA
ChaUbxgAAAoqIgIWKBkAAAoqUgJ7FgAACgJ7FwAACheUbxoAAAoqIgIXKBkAAAoqUgJ7FgAACgJ7
FwAAChiUbxsAAAoqIgIYKBkAAAoqJgIZAygcAAAKKloDLAgCGSgdAAAKKnIhAABwcx4AAAp6OgIa
A4wRAAABKBwAAAoqWgMsCAIaKB0AAAoqciEAAHBzHgAACno6AhsDjBIAAAEoHAAACipaAywIAhso
HQAACipyIQAAcHMeAAAKeh4CKB8AAAoqHgIoIAAACip+AighAAAKAgJzGAAABn0BAAAEAgJzGQAA
Bn0CAAAEKpIEcr4AAHAabyIAAAosFQIFAgMoIwAACg4EcwUAAAZvFgAABipKKwcCA28XAAAGA28S
AAAGLfEqBio6AigkAAAKAgN9AwAABCo6AigkAAAKAgN9BAAABCoeAigkAAAKKq5+BQAABC0ecs4A
AHDQBwAAAiglAAAKbyYAAApzJwAACoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKh4C
KCgAAAoqLnMfAAAGgAcAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAB4
BgAAI34AAOQGAAAQBwAAI1N0cmluZ3MAAAAA9A0AAEABAAAjVVMANA8AABAAAAAjR1VJRAAAAEQP
AADgAQAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJAQAAAPoBMwAWAAABAAAAIQAAAAgAAAAHAAAAIAAA
ABMAAAAoAAAAEAAAAAMAAAAPAAAAEAAAAAEAAAAEAAAAAQAAAAAAdAMBAAAAAAAGAEICRQUGANYC
RQUGAI4BMgUPALkFAAAGALsBhwQGACUChwQGAAYChwQGAL0ChwQGAGIChwQGAHsChwQGANIBhwQG
AO0BMgMKAJYCqAAKAAQFqAAOAPUEqAAKANAEqAAGAJ8AMwQGAFYDMwQKAH8GqAAGAEIGMwQGAHEB
MgUGABUFZQUGAMQEcgQSAEEBXgMSAKIBXgMSAPYAXQQGAFYBRQUGAJkEMwQGAEwDMwQGALMEMwQG
AMkAMwQGAHEAMwQGAAQHhwQAAAAALgAAAAAAAQABAAEAEABGBAAAEAABAAEAAQAQAOgEAAA5AAEA
BQABABAAYQYAAE0AAQAUAAEAEAA2BgAAUQADABgAAQAQAPcFAABRAAQAGQAAABAAbAXIBVEABQAa
AAABEAAmBsgFaQAHAB4ABgA2Bo8ABgD3BZMAAQBvBpcAAQBvBpcAEQA6BJsAEQDmAJ8AEQBhAKMA
UCAAAAAAxgD0AgYAAQBYIAAAAADGAP8CBgABAGAgAAAAAMYA4QanAAEAxiAAAAAAhhglBQYAAgDO
IAAAAACGGCUFKAACANkgAAAAAIYIJwOtAAUA7iAAAAAAhggQBFYABQD3IAAAAACGCCwBsQAFAAwh
AAAAAIYI4ANWAAUAFSEAAAAAhghVALYABQAqIQAAAACGCLADVgAFADMhAAAAAIYIGgMQAAUAPSEA
AAAAhgj8A7sABgBUIQAAAACGCBYBwAAHAGMhAAAAAIYIwwO7AAgAeiEAAAAAhghIAMYACQCJIQAA
AACGCJwDuwAKAKAhAAAAAIYA+AZWAAsAqCEAAAAAhgBJBlYACwCwIQAAAACGGCUFBgALANAhAAAA
AMYA1AbMAAsA9SEAAAAAxgHNBqcADwAIIgAAAADGAeEGpwAQAAoiAAAAAIYYJQXWABEAGSIAAAAA
hhglBdYAEgAoIgAAAACDGCUFBgATADAiAAAAAJMIEQXcABMAXCIAAAAAkwjOAOEAEwBjIgAAAACT
CNoA5gATAGsiAAAAAJYIVQbsABQAciIAAAAAhhglBQYAFAB6IgAAAACRGCsF8QAUAAAAAQD8BgAA
AQAKBQAAAgABBgAAAwDeBAAAAQAUAwAAAQAUAwAAAQAUAwAAAQAUAwAAAQAUAwAAAQAUAwAAAQA3
AAAAAgCVAAAAAwAKBQAABADeBAAAAQAKBQAAAQD8BgAAAQCFBgAAAQCFBgAAAQAUAwkAJQUBABEA
JQUGABkAJQUKACkAJQUQADEAJQUQADkAJQUQAEEAJQUQAEkAJQUQAFEAJQUQAFkAJQUQAGEAJQUQ
AGkAJQUGAKkAJQUGAMkAJQUVANkAJQUGAJkA9AIGAJkA/wIGAJEAJQUBAJEAUQQbAIkACwMkAHEA
JQUoAHEACgUyAHEAAQY2AHkAAQA6AHEAGwQ/AHkADgFEAHkAUwNKAHEAKgRQAHEAIgQBAOEAJQUQ
AHEA+AZWAHEASQZWAJkAJQUGAOkALwZaAJkAFQZhAKEAJQUGAPkAgwBnAPkAAAdvALEAJQV1ANEA
JQUGAC4ACwAaAS4AEwAjAS4AGwBCAS4AIwBLAS4AKwB0AS4AMwB0AS4AOwB0AS4AQwBLAS4ASwB6
AS4AUwB0AS4AWwCRAUMAYwDbAeEAewDbAeMAawDbAakBcwBCAckBcwBCAQMAAQAHAA0ACAAPAAAA
KwP1AAAAFAT5AAAAMAH9AAAA5AP5AAAAWQACAQAAtAP5AAAAHgMHAQAAAAT5AAAAGgH9AAAAxwP5
AAAATAACAQAAoAP5AAAAFQULAQAA7gAQAQAAWQYVAQIABgADAAIABwAFAAIACAAHAAIACQAJAAIA
CgALAAIACwANAAEADAAPAAEADQARAAEADgATAAEADwAVAAEAEAAXAAEAEQAZAAIAGwAbAAIAHAAd
AAEAHQAdAAIAHgAfAASAAAABAAAAAAAAAAAAAAAAAAoAAAAEAAAAAAAAAAAAAAB9AD8AAAAAAA4A
AAAAAAAAAAAAAIYAjwYAAAAADgAAAAAAAAAAAAAAhgCsBgAAAAAEAAAAAAAAAAAAAAB9ADMEAAAA
AAAAAAABAAAAdgUAAAAAAAAAR2V0SW50MTYAU0NfZWEwZmJmYzliZGRhNGFlYWI1MGM2NmMyZGZi
OTAwZTkAPE1vZHVsZT4ASW5wdXRJRABtc2NvcmxpYgBzZXRfREMycHJpY2UAZ2V0X0RDcHJpY2UA
ZGVmYXVsdEluc3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0
TmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBHZXREYXRlAHNldF9EQzJkZWFjdGl2YXRlZGF0ZQBnZXRfRENkZWFjdGl2YXRlZGF0ZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAE1h
eFZhbHVlAHZhbHVlAHNldF9EQ2FjdGl2ZQBnZXRfYWN0aXZlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAU3RyaW5nAEdldERlY2ltYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2VhMGZiZmM5
YmRkYTRhZWFiNTBjNjZjMmRmYjkwMGU5LmRsbABzZXRfREMycHJpY2VfSXNOdWxsAGdldF9EQ3By
aWNlX0lzTnVsbABzZXRfREMyZGVhY3RpdmF0ZWRhdGVfSXNOdWxsAGdldF9EQ2RlYWN0aXZhdGVk
YXRlX0lzTnVsbABzZXRfRENhY3RpdmVfSXNOdWxsAGdldF9hY3RpdmVfSXNOdWxsAFNldE51bGwA
c2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4Ab3BfRGl2aXNpb24AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52
YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1
dE5hbWVNYXAAT3V0cHV0TWFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZm
ZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19lYTBmYmZj
OWJkZGE0YWVhYjUwYzY2YzJkZmI5MDBlOS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
RGVidWdnaW5nTW9kZXMAU0NfZWEwZmJmYzliZGRhNGFlYWI1MGM2NmMyZGZiOTAwZTkuUHJvcGVy
dGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRp
bmdzAEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNl
ckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1By
b2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAAA
AAANQQBjAHQAaQB2AGUAABFJAG4AYQBjAHQAaQB2AGUAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBw
AGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4A
IABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBu
ACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfAGUAYQAwAGYAYgBmAGMA
OQBiAGQAZABhADQAYQBlAGEAYgA1ADAAYwA2ADYAYwAyAGQAZgBiADkAMAAwAGUAOQAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA1tHfCJKTV06O4BpRx6F9JgAEIAEB
CAMgAAEFIAEBEREEIAEBDgUgAQERYQgAAhFJEUkRSQMGEUUJIAMBEj0dCBJBAwYSPQMGHQgEIAEG
CAQgAQIIBSABEUUIBSABEUkIBSACAQgcAyAAAgYgAgIOEXkFIAEdCAgHAAESfRGAgQUgABKAhQcg
AgEOEoCFCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJNAwYSWQMGEl0DBhIgBSABARIMAyAA
BgQgABFFBCAAEUkEIAEBAgUgAQERRQUgAQERSQkgBAEIDhI9EkEFIAEBEk0EAAASWQQAABJdBQAB
ARJdBAAAEiADAAABAygABgMoAAIEKAARRQQoABFJAygADgQIABJZBAgAEl0ECAASIAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfZWEwZmJmYzli
ZGRhNGFlYWI1MGM2NmMyZGZiOTAwZTkAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAASQEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVU
IEZyYW1ld29yayA0LjUEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACMNAAAAAAAAAAAAACmNAAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAmDQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfAGUAYQAwAGYAYgBmAGMAOQBiAGQAZABhADQAYQBlAGEAYgA1ADAAYwA2ADYAYwAyAGQA
ZgBiADkAMAAwAGUAOQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AZQBhADAAZgBiAGYA
YwA5AGIAZABkAGEANABhAGUAYQBiADUAMABjADYANgBjADIAZABmAGIAOQAwADAAZQA5AC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBlAGEA
MABmAGIAZgBjADkAYgBkAGQAYQA0AGEAZQBhAGIANQAwAGMANgA2AGMAMgBkAGYAYgA5ADAAMABl
ADkALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AZQBhADAA
ZgBiAGYAYwA5AGIAZABkAGEANABhAGUAYQBiADUAMABjADYANgBjADIAZABmAGIAOQAwADAAZQA5
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAC4NAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_ea0fbfc9bdda4aeab50c66c2dfb900e9</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">0D</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Inputs[Input 0].Columns[active]"
                      cachedDataType="i2"
                      cachedName="active"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[active]" />
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Inputs[Input 0].Columns[DC_deactivate_date]"
                      cachedDataType="dbDate"
                      cachedName="DC_deactivate_date"
                      lineageId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Output].Columns[DC_deactivate_date]" />
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Inputs[Input 0].Columns[DC_price]"
                      cachedDataType="cy"
                      cachedName="DC_price"
                      lineageId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Output].Columns[DC_price]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Outputs[Output 0].Columns[DC_active]"
                      dataType="wstr"
                      length="15"
                      lineageId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Outputs[Output 0].Columns[DC_active]"
                      name="DC_active" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Outputs[Output 0].Columns[DC2_deactivate_date]"
                      dataType="dbDate"
                      lineageId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Outputs[Output 0].Columns[DC2_deactivate_date]"
                      name="DC2_deactivate_date" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Outputs[Output 0].Columns[DC2_price]"
                      dataType="cy"
                      lineageId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Outputs[Output 0].Columns[DC2_price]"
                      name="DC2_price" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              localeId="1033"
              name="Lookup Product Categories"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from () [refTable]
where [refTable].[DC_id] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DC_id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DC_main" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DC_sub" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DC_sub-sub" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[categoryId]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Connections[CacheConnection]"
                  connectionManagerID="Package.ConnectionManagers[ProductCategories_CM]"
                  connectionManagerRefId="Package.ConnectionManagers[ProductCategories_CM]"
                  description="Connection manager used to access lookup data."
                  name="CacheConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Inputs[Lookup Input].Columns[categoryId]"
                      cachedDataType="i4"
                      cachedName="categoryId"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[categoryId]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">DC_id</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Match Output].Columns[main]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Match Output].Columns[main]"
                      name="main"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">DC_main</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Match Output].Columns[sub]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Match Output].Columns[sub]"
                      name="sub"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">DC_sub</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Match Output].Columns[sub-sub]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Match Output].Columns[sub-sub]"
                      name="sub-sub"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">DC_sub-sub</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              localeId="1033"
              name="Microsoft Access DB"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Product</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Connections[OleDbConnection]"
                  connectionManagerID="{D96F8C23-7039-4A56-8FB3-1A9A66DB7DC3}:invalid"
                  connectionManagerRefId="{D96F8C23-7039-4A56-8FB3-1A9A66DB7DC3}:invalid"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[id]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].ExternalColumns[id]"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[id]"
                      name="id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[active]"
                      dataType="i2"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].ExternalColumns[active]"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[active]"
                      name="active"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[name]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].ExternalColumns[name]"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[name]"
                      name="name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[price]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].ExternalColumns[price]"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[price]"
                      name="price"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[deactivate_date]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].ExternalColumns[deactivate_date]"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[deactivate_date]"
                      name="deactivate_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[categoryId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].ExternalColumns[categoryId]"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[categoryId]"
                      name="categoryId"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].ExternalColumns[id]"
                      dataType="i4"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].ExternalColumns[active]"
                      dataType="i2"
                      name="active" />
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].ExternalColumns[name]"
                      dataType="nText"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].ExternalColumns[price]"
                      dataType="i4"
                      name="price" />
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].ExternalColumns[deactivate_date]"
                      dataType="date"
                      name="deactivate_date" />
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].ExternalColumns[categoryId]"
                      dataType="i4"
                      name="categoryId" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[name]"
                      dataType="nText"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[price]"
                      dataType="i4"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[price]"
                      name="price" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[active]"
                      dataType="i2"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[active]"
                      name="active" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[categoryId]"
                      dataType="i4"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[categoryId]"
                      name="categoryId" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[deactivate_date]"
                      dataType="date"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[deactivate_date]"
                      name="deactivate_date" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              localeId="1033"
              name="Microsoft SQL Server DB"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Dim_Product]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Connections[OleDbConnection]"
                  connectionManagerID="{5F266732-EA6E-44B1-A24A-C8D840AD667A}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.FClub_DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      externalMetadataColumnId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[ProductID]"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output].Columns[id]" />
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].Columns[main]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="main"
                      externalMetadataColumnId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[MainCategory]"
                      lineageId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Match Output].Columns[main]" />
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].Columns[sub]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="sub"
                      externalMetadataColumnId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[SubCategory]"
                      lineageId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Match Output].Columns[sub]" />
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].Columns[sub-sub]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="sub-sub"
                      externalMetadataColumnId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[SubSubCategory]"
                      lineageId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Match Output].Columns[sub-sub]" />
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].Columns[DC_name]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DC_name"
                      externalMetadataColumnId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[ProductName]"
                      lineageId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Output].Columns[DC_name]" />
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].Columns[DC_active]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="DC_active"
                      externalMetadataColumnId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[IsProductActive]"
                      lineageId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Outputs[Output 0].Columns[DC_active]" />
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].Columns[DC2_price]"
                      cachedDataType="cy"
                      cachedName="DC2_price"
                      externalMetadataColumnId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[ProductSalePrice]"
                      lineageId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Outputs[Output 0].Columns[DC2_price]" />
                    <inputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].Columns[DC2_deactivate_date]"
                      cachedDataType="dbDate"
                      cachedName="DC2_deactivate_date"
                      externalMetadataColumnId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[DateOfDeactivation]"
                      lineageId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Outputs[Output 0].Columns[DC2_deactivate_date]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[ProductKey]"
                      dataType="i4"
                      name="ProductKey" />
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[ProductID]"
                      dataType="i4"
                      name="ProductID" />
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[ProductName]"
                      dataType="wstr"
                      length="50"
                      name="ProductName" />
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[MainCategory]"
                      dataType="wstr"
                      length="50"
                      name="MainCategory" />
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[SubCategory]"
                      dataType="wstr"
                      length="50"
                      name="SubCategory" />
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[SubSubCategory]"
                      dataType="wstr"
                      length="50"
                      name="SubSubCategory" />
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[ProductSalePrice]"
                      dataType="cy"
                      name="ProductSalePrice" />
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[IsProductActive]"
                      dataType="wstr"
                      length="15"
                      name="IsProductActive" />
                    <externalMetadataColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input].ExternalColumns[DateOfDeactivation]"
                      dataType="dbDate"
                      name="DateOfDeactivation" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Extract Data From Microsoft Access DB.Paths[Data Conversion Output]"
              endId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Inputs[Input 0]"
              name="Data Conversion Output"
              startId="Package\Extract Data From Microsoft Access DB\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Extract Data From Microsoft Access DB.Paths[Lookup Match Output]"
              endId="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB.Inputs[OLE DB Destination Input]"
              name="Lookup Match Output"
              startId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Extract Data From Microsoft Access DB.Paths[OLE DB Source Output]"
              endId="Package\Extract Data From Microsoft Access DB\Data Conversion.Inputs[Data Conversion Input]"
              name="OLE DB Source Output"
              startId="Package\Extract Data From Microsoft Access DB\Microsoft Access DB.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Extract Data From Microsoft Access DB.Paths[Output 0]"
              endId="Package\Extract Data From Microsoft Access DB\Lookup Product Categories.Inputs[Lookup Input]"
              name="Output 0"
              startId="Package\Extract Data From Microsoft Access DB\Data Conversion Script.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Data From Excel To Cache Tranformation"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{153EF219-B666-4AB0-B23D-87829E57E51F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="1033"
      DTS:ObjectName="Load Data From Excel To Cache Tranformation"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Data From Excel To Cache Tranformation\Cache Transform"
              componentClassID="Microsoft.Cache"
              contactInfo="Cache Transform;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Writes data to a cache (a .caw file) with the Cache Connection Manager. Reuse the cache between multiple Lookup transforms to reduce database load. Share the cache to reduce memory usage. Note: cache data is stored in clear text and not recommended for sensitive data."
              name="Cache Transform"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Data From Excel To Cache Tranformation\Cache Transform.Connections[CacheConnection]"
                  connectionManagerID="Package.ConnectionManagers[ProductCategories_CM]"
                  connectionManagerRefId="Package.ConnectionManagers[ProductCategories_CM]"
                  description="The connection used to access the cache."
                  name="CacheConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load Data From Excel To Cache Tranformation\Cache Transform.Inputs[Cache Input]"
                  hasSideEffects="true"
                  name="Cache Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Cache Transform.Inputs[Cache Input].Columns[DC_id]"
                      cachedDataType="i4"
                      cachedName="DC_id"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Output].Columns[DC_id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The cache column associated with the input column."
                          name="CacheColumnName">DC_id</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Cache Transform.Inputs[Cache Input].Columns[DC_main]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DC_main"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Output].Columns[DC_main]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The cache column associated with the input column."
                          name="CacheColumnName">DC_main</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Cache Transform.Inputs[Cache Input].Columns[DC_sub]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DC_sub"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Output].Columns[DC_sub]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The cache column associated with the input column."
                          name="CacheColumnName">DC_sub</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Cache Transform.Inputs[Cache Input].Columns[DC_sub-sub]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DC_sub-sub"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Output].Columns[DC_sub-sub]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The cache column associated with the input column."
                          name="CacheColumnName">DC_sub-sub</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Data From Excel To Cache Tranformation\Cache Transform.Outputs[Cache Output]"
                  name="Cache Output"
                  synchronousInputId="Package\Load Data From Excel To Cache Tranformation\Cache Transform.Inputs[Cache Input]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Data From Excel To Cache Tranformation\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Inputs[Data Conversion Input].Columns[id]"
                      cachedDataType="r8"
                      cachedName="id"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[id]" />
                    <inputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Inputs[Data Conversion Input].Columns[main]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="main"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[main]" />
                    <inputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Inputs[Data Conversion Input].Columns[sub]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[sub]" />
                    <inputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Inputs[Data Conversion Input].Columns[sub-sub]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub-sub"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[sub-sub]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Output].Columns[DC_id]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Output].Columns[DC_id]"
                      name="DC_id"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[id]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Output].Columns[DC_main]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Output].Columns[DC_main]"
                      name="DC_main"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[main]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Output].Columns[DC_sub]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Output].Columns[DC_sub]"
                      name="DC_sub"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[sub]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Output].Columns[DC_sub-sub]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Output].Columns[DC_sub-sub]"
                      name="DC_sub-sub"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[sub-sub]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Product Categories Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">produktkategori$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Connections[OleDbConnection]"
                  connectionManagerID="{07083433-ECE5-4696-AFCF-0048B4C65BAC}:external"
                  connectionManagerRefId="Project.ConnectionManagers[ProductCategories_Excel]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[id]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].ExternalColumns[id]"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[id]"
                      name="id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[main]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].ExternalColumns[main]"
                      length="255"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[main]"
                      name="main"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[sub]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].ExternalColumns[sub]"
                      length="255"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[sub]"
                      name="sub"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[sub-sub]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].ExternalColumns[sub-sub]"
                      length="255"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].Columns[sub-sub]"
                      name="sub-sub"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].ExternalColumns[id]"
                      dataType="r8"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].ExternalColumns[main]"
                      dataType="wstr"
                      length="255"
                      name="main" />
                    <externalMetadataColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].ExternalColumns[sub]"
                      dataType="wstr"
                      length="255"
                      name="sub" />
                    <externalMetadataColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output].ExternalColumns[sub-sub]"
                      dataType="wstr"
                      length="255"
                      name="sub-sub" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Error Output].Columns[id]"
                      dataType="r8"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Error Output].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Error Output].Columns[main]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Error Output].Columns[main]"
                      name="main" />
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Error Output].Columns[sub]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Error Output].Columns[sub]"
                      name="sub" />
                    <outputColumn
                      refId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Error Output].Columns[sub-sub]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Error Output].Columns[sub-sub]"
                      name="sub-sub" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Data From Excel To Cache Tranformation.Paths[Data Conversion Output]"
              endId="Package\Load Data From Excel To Cache Tranformation\Cache Transform.Inputs[Cache Input]"
              name="Data Conversion Output"
              startId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Load Data From Excel To Cache Tranformation.Paths[Excel Source Output]"
              endId="Package\Load Data From Excel To Cache Tranformation\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source.Outputs[Excel Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{BCFEA1D6-AFFF-417D-A863-8FB7C199931E}"
      DTS:From="Package\Load Data From Excel To Cache Tranformation"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Extract Data From Microsoft Access DB" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="299,42"
          Id="Package\Extract Data From Microsoft Access DB"
          TopLeft="92,123.566666248242" />
        <NodeLayout
          Size="299,42"
          Id="Package\Load Data From Excel To Cache Tranformation"
          TopLeft="90,39" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="240.5,81">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.566666248242"
              Start="0,0"
              End="0,35.066666248242">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.066666248242" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Extract Data From Microsoft Access DB">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="205,42"
          Id="Package\Extract Data From Microsoft Access DB\Microsoft Access DB"
          TopLeft="79.18333266899,29" />
        <NodeLayout
          Size="205,42"
          Id="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB"
          TopLeft="79.18333266899,332.833330117663" />
        <NodeLayout
          Size="205,42"
          Id="Package\Extract Data From Microsoft Access DB\Lookup Product Categories"
          TopLeft="79.18333266899,249" />
        <NodeLayout
          Size="205,42"
          Id="Package\Extract Data From Microsoft Access DB\Data Conversion Script"
          TopLeft="79.18333266899,169" />
        <NodeLayout
          Size="205,42"
          Id="Package\Extract Data From Microsoft Access DB\Data Conversion"
          TopLeft="79.18333266899,96" />
        <EdgeLayout
          Id="Package\Extract Data From Microsoft Access DB.Paths[Output 0]"
          TopLeft="181.68333266899,211">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract Data From Microsoft Access DB.Paths[OLE DB Source Output]"
          TopLeft="181.68333266899,71">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract Data From Microsoft Access DB.Paths[Lookup Match Output]"
          TopLeft="181.68333266899,291">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.833330117663"
              Start="0,0"
              End="0,34.333330117663">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.333330117663" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,11.3619775588315,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract Data From Microsoft Access DB.Paths[Data Conversion Output]"
          TopLeft="181.68333266899,138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Extract Data From Microsoft Access DB\Microsoft SQL Server DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Extract Data From Microsoft Access DB\Microsoft Access DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Extract Data From Microsoft Access DB\Lookup Product Categories">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load Data From Excel To Cache Tranformation">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="231,42"
          Id="Package\Load Data From Excel To Cache Tranformation\Cache Transform"
          TopLeft="113.333333333333,182" />
        <NodeLayout
          Size="231,42"
          Id="Package\Load Data From Excel To Cache Tranformation\Data Conversion"
          TopLeft="113.333333333333,107" />
        <NodeLayout
          Size="231,42"
          Id="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source"
          TopLeft="113.333333333333,36" />
        <EdgeLayout
          Id="Package\Load Data From Excel To Cache Tranformation.Paths[Data Conversion Output]"
          TopLeft="228.833333333333,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Data From Excel To Cache Tranformation.Paths[Excel Source Output]"
          TopLeft="228.833333333333,78">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Data From Excel To Cache Tranformation\Excel Product Categories Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>